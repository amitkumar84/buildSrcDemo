object Versions {
    const val coreKtxVersion = "1.10.1"
    const val lifeCycleRunTimeKtx = "2.6.1"
    const val composeVesion = "1.7.2"
    const val composeBomVersion = "2023.03.00"
    const val junitVersion = "4.13.2"
    const val androidxJunit = "1.1.5"
    const val espressoCore = "3.5.1"
    const val hiltVersion = "2.44"
    const val retrofitVersion = "2.9.0"
    const val okhttpVersion = "4.4.1"
    const val workVersion = "2.8.1"
    const val chuckerVersion = "3.5.2"
    const val roomVersion = "2.5.2"
    const val glideVersion = "4.14.0"
    const val multiDexVersion = "2.0.1"
}

object Dependencies {
    val coreKtx = "androidx.core:core-ktx:${Versions.coreKtxVersion}"
    var lifeCycleRuntimeKtx =
        "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.lifeCycleRunTimeKtx}"
    val compose = "androidx.activity:activity-compose:${Versions.composeVesion}"
    val composeBom = "androidx.compose:compose-bom:${Versions.composeBomVersion}"
    val junit = "junit:junit:${Versions.junitVersion}"
    val androidXJUnit = "androidx.test.ext:junit:${Versions.androidxJunit}"
    val espresso = "androidx.test.espresso:espresso-core:${Versions.espressoCore}"
    val hilt = "com.google.dagger:hilt-android:${Versions.hiltVersion}"
    val hiltCompiler = "com.google.dagger:hilt-android-compiler:${Versions.hiltVersion}"
    val hiltNavigationCompose = "androidx.hilt:hilt-navigation-compose:1.0.0"
    val multiDex = "androidx.multidex:multidex:${Versions.multiDexVersion}"
    val androidXNavigationCompose = "androidx.navigation:navigation-compose:2.5.1"
    val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofitVersion}"
    val gsonConvertorRetrofit = "com.squareup.retrofit2:converter-gson:${Versions.retrofitVersion}"
    val okHttp = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttpVersion}"
    val chuckerDebug = "com.github.chuckerteam.chucker:library:${Versions.chuckerVersion}"
    val chuckerRelease = "com.github.chuckerteam.chucker:library-no-op:${Versions.chuckerVersion}"
    val coroutine = "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    val composeMaterial = "androidx.compose.material3:material3:1.1.1"
    val composeMaterialWindowSize = "androidx.compose.material3:material3-window-size-class:1.1.1"
    val roomJava = "androidx.room:room-runtime:${Versions.roomVersion}"
    val roomCompiler = "androidx.room:room-compiler:${Versions.roomVersion}"
    // optional - Kotlin Extensions and Coroutines support for Room
    val roomKtx = "androidx.room:room-ktx:${Versions.roomVersion}"
    val roomTesting = "androidx.room:room-testing:${Versions.roomVersion}"
    val roomPaging = "androidx.room:room-paging:${Versions.roomVersion}"

    val workJava = "androidx.work:work-runtime:${Versions.workVersion}"
    val workKtx = "androidx.work:work-runtime-ktx:${Versions.workVersion}"
    val workTesting = "androidx.work:work-testing:${Versions.workVersion}"
    val glide = "com.github.bumptech.glide:glide:${Versions.glideVersion}"
    val glideCompiler =  "com.github.bumptech.glide:compiler:${Versions.glideVersion}"
}
